# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Emg_detection_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from VizWindow import Ui_VizWindow


class Ui_Emg_detection_window(QtWidgets.QWidget, object):
    def __init__(self, controller, channels):
        from view import EMGWindow
        super(Ui_Emg_detection_window, self).__init__()
        self.channels = channels
        self.controller = controller
        self.view = EMGWindow(self)
        self.vizui = Ui_VizWindow(self, self)
        self.emgui = Ui_Emg_detection_window
        self.emgui.setObjectName(self, "Emg_detection_window")
        self.emgui.resize(self, 680, 241)
        self.onset = None
        self.offset = None

    def setupemgUi(self, Emg_detection_window):
        self.centralwidget = QtWidgets.QWidget(Emg_detection_window)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 0, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(10, 40, 101, 141))
        self.listWidget.setSelectionMode(QtWidgets.QAbstractItemView.MultiSelection)
        self.listWidget.setObjectName("listWidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(310, 50, 113, 25))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(310, 110, 113, 25))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(270, 170, 161, 25))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(260, 0, 161, 31))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(230, 110, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Yrsa")
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(230, 50, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Yrsa")
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(510, 60, 151, 101))
        self.widget.setStyleSheet("background-color: rgb(192, 191, 188);")
        self.widget.setObjectName("widget")
        self.checkBox = QtWidgets.QCheckBox(self.widget)
        self.checkBox.setGeometry(QtCore.QRect(20, 10, 111, 23))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.checkBox.setFont(font)
        self.checkBox.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.checkBox.setChecked(True)
        self.checkBox.setObjectName("checkBox")
        self.checkBox_2 = QtWidgets.QCheckBox(self.widget)
        self.checkBox_2.setGeometry(QtCore.QRect(20, 70, 111, 23))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.checkBox_2.setFont(font)
        self.checkBox_2.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.checkBox_2.setChecked(True)
        self.checkBox_2.setObjectName("checkBox_2")

        self.retranslateUi(Emg_detection_window)
        QtCore.QMetaObject.connectSlotsByName(Emg_detection_window)

    def retranslateUi(self, Emg_detection_window):
        _translate = QtCore.QCoreApplication.translate
        Emg_detection_window.setWindowTitle(_translate("Emg_detection_window", "Onset and offset EMG detection"))
        self.label.setText(_translate("Emg_detection_window", "Channels"))
        self.pushButton.setText(_translate("Emg_detection_window", "Detect"))
        self.pushButton.clicked.connect(self.detectemg)
        self.label_2.setText(_translate("Emg_detection_window", "Trigger names"))
        self.label_4.setText(_translate("Emg_detection_window", "Offset"))
        self.label_5.setText(_translate("Emg_detection_window", "Onset"))
        self.checkBox.setText(_translate("Emg_detection_window", "Use raw"))
        self.checkBox_2.setText(_translate("Emg_detection_window", "Use tkeo"))

    def detectemg(self):
        selected_channels = [item.text() for item in self.listWidget.selectedItems()]
        print("Selected Channels:", selected_channels)
        # # Obtention des index des canaux sélectionnés
        # channel_indices = self.controller.get_channel_indices(selected_channels)
        # print("Channel Indices:", channel_indices)
        self.onset = self.lineEdit.text().strip()
        self.offset = self.lineEdit_2.text().strip()
        self.window = QtWidgets.QMainWindow()
        onset = self.onset
        offset = self.offset
        # self.vizui.comboBox.addItem(onset)  # Add onset value to comboBoxOnset
        # self.vizui.comboBox_2.addItem(offset)  # Add offset value to comboBoxOffset
        self.controller.detect_emg(selected_channels, onset, offset)
        # self.view.openvizwindow(self, onset, offset)
    # def pass_onset_offset_to_viz(self):
    #     self.vizui = Ui_VizWindow(self.controller, self)
    #     onset = self.lineEdit.text().strip()
    #     offset = self.lineEdit_2.text().strip()
    #     print(onset)
    #     print(offset)
    #     self.view.
    #     # Access the comboBox in Ui_VizWindow
    #     combo_box = self.vizui.comboBox
    #
    #     # Clear any existing items in the comboBox
    #     combo_box.clear()
    #
    #     # Add onset and offset values to the comboBox
    #     combo_box.addItem(onset)
    #     combo_box.addItem(offset)


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Emg_detection_window = QtWidgets.QMainWindow()
    ui = Ui_Emg_detection_window()
    ui.setupUi(Emg_detection_window)
    Emg_detection_window.show()
    sys.exit(app.exec_())
