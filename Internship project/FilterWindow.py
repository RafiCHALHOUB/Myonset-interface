# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Filter.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_FilterWindow(QtWidgets.QWidget, object):
    def __init__(self, controller, channels):
        from view import EMGWindow
        super(Ui_FilterWindow, self).__init__()
        self.controller = controller
        self.channels = channels
        self.filterui = Ui_FilterWindow
        self.filterui.setObjectName(self, "FilterWindow")
        self.filterui.resize(self, 563, 339)
        self.view = EMGWindow
        # self.filterui.setCentralWidget(self.centralwidget)

        self.widgetsF(self)

    def widgetsF(self, FilterWindow):
        self.centralwidget = QtWidgets.QWidget(FilterWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(50, 0, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(240, 0, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(240, 50, 121, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(240, 170, 121, 31))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(420, 140, 101, 81))
        self.listWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAlwaysOn)
        self.listWidget.setSelectionMode(QtWidgets.QAbstractItemView.MultiSelection)
        self.listWidget.setObjectName("listWidget")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(420, 0, 101, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.listWidget_2 = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget_2.setGeometry(QtCore.QRect(420, 40, 101, 81))
        self.listWidget_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAlwaysOn)
        self.listWidget_2.setSelectionMode(QtWidgets.QAbstractItemView.MultiSelection)
        self.listWidget_2.setObjectName("listWidget_2")
        self.checkBox_lp = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_lp.setGeometry(QtCore.QRect(40, 150, 171, 51))
        self.checkBox_lp.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.checkBox_lp.setObjectName("checkBox")
        self.checkBox_hp = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_hp.setGeometry(QtCore.QRect(40, 40, 171, 51))
        self.checkBox_hp.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.checkBox_hp.setObjectName("checkBox_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(430, 270, 89, 25))
        self.pushButton.clicked.connect(self.apply_filter)
        self.pushButton.clicked.connect(self.close_window)
        self.pushButton.setObjectName("pushButton")
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setObjectName("statusbar")
        self.filterui.setStatusTip(self, 'Click to apply the filter')

        self.retranslateUi(FilterWindow)
        QtCore.QMetaObject.connectSlotsByName(FilterWindow)

    def retranslateUi(self, FilterWindow):
        _translate = QtCore.QCoreApplication.translate
        FilterWindow.setWindowTitle(_translate("FilterWindow", "Filter EMG"))
        self.label.setText(_translate("FilterWindow", "Type of filter"))
        self.label_2.setText(_translate("FilterWindow", "Frequency"))
        self.label_3.setText(_translate("FilterWindow", "Channels"))
        self.checkBox_lp.setText(_translate("FilterWindow", "Low pass filter"))
        self.checkBox_hp.setText(_translate("FilterWindow", "High pass filter"))
        self.pushButton.setText(_translate("FilterWindow", "Filter"))

    def apply_filter(self):
        # Get selected channel names from QListWidget
        selected_channels_hp = [item.text() for item in self.listWidget_2.selectedItems()]
        selected_channels_lp = [item.text() for item in self.listWidget.selectedItems()]
        # Get low and high cutoff frequencies from corresponding QLineEdit widgets
        high_cutoff_str = self.lineEdit_2.text().strip()
        low_cutoff_str = self.lineEdit.text().strip()

        if not low_cutoff_str and not high_cutoff_str:
            raise ValueError("At least one of the cutoff frequencies must be specified.")

        # Apply filter

        if self.checkBox_lp.isChecked():
            # Apply lowpass filter
            self.controller.apply_low_pass_filter(selected_channels_lp, float(high_cutoff_str))
        if self.checkBox_hp.isChecked():
            # Apply highpass filter
            self.controller.apply_high_pass_filter(selected_channels_hp, float(low_cutoff_str))

    def close_window(self):
        self.filterui.close(self)


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    FilterWindow = QtWidgets.QMainWindow()
    ui = Ui_FilterWindow(None)
    ui.setupUi(FilterWindow)
    FilterWindow.show()
    sys.exit(app.exec_())
